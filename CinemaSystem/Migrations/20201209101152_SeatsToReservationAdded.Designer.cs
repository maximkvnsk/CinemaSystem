// <auto-generated />
using System;
using CinemaSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CinemaSystem.Migrations
{
    [DbContext(typeof(CinemaDBContext))]
    [Migration("20201209101152_SeatsToReservationAdded")]
    partial class SeatsToReservationAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CinemaSystem.Models.Audithorium", b =>
                {
                    b.Property<int>("AudithoriumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("AudithoriumId");

                    b.ToTable("Audithorium");
                });

            modelBuilder.Entity("CinemaSystem.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("PostId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CinemaSystem.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cast")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Director")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("MovieRating")
                        .HasColumnType("int")
                        .HasColumnName("Movie_Rating");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MovieId");

                    b.HasIndex("MovieRating");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("CinemaSystem.Models.MovieRating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RatingValue")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RatingId")
                        .HasName("PK__Movie_Ra__FCCDF87C45BE88B9");

                    b.ToTable("Movie_Rating");
                });

            modelBuilder.Entity("CinemaSystem.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PostName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("PostId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("CinemaSystem.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool?>("Paid")
                        .HasColumnType("bit");

                    b.Property<bool?>("Reserved")
                        .HasColumnType("bit");

                    b.Property<int?>("ScreeningId")
                        .HasColumnType("int");

                    b.Property<int?>("SeatId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ScreeningId");

                    b.HasIndex("SeatId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("CinemaSystem.Models.Screening", b =>
                {
                    b.Property<int>("ScreeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AudithoriumId")
                        .HasColumnType("int");

                    b.Property<int?>("Cost")
                        .HasColumnType("int");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("ScreeningStart")
                        .HasColumnType("time");

                    b.HasKey("ScreeningId");

                    b.HasIndex("AudithoriumId");

                    b.HasIndex("MovieId");

                    b.ToTable("Screening");
                });

            modelBuilder.Entity("CinemaSystem.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AudithoriumId")
                        .HasColumnType("int");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<int?>("Row")
                        .HasColumnType("int");

                    b.HasKey("SeatId");

                    b.HasIndex("AudithoriumId");

                    b.ToTable("Seat");
                });

            modelBuilder.Entity("CinemaSystem.Models.Employee", b =>
                {
                    b.HasOne("CinemaSystem.Models.Post", "Post")
                        .WithMany("Employees")
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK_Employee_ToTable");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("CinemaSystem.Models.Movie", b =>
                {
                    b.HasOne("CinemaSystem.Models.MovieRating", "MovieRatingNavigation")
                        .WithMany("Movies")
                        .HasForeignKey("MovieRating")
                        .HasConstraintName("FK_Movie_ToTable");

                    b.Navigation("MovieRatingNavigation");
                });

            modelBuilder.Entity("CinemaSystem.Models.Reservation", b =>
                {
                    b.HasOne("CinemaSystem.Models.Employee", "Employee")
                        .WithMany("Reservations")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Reservation_ToTable_1");

                    b.HasOne("CinemaSystem.Models.Screening", "Screening")
                        .WithMany("Reservations")
                        .HasForeignKey("ScreeningId")
                        .HasConstraintName("FK_Reservation_ToTable");

                    b.HasOne("CinemaSystem.Models.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("SeatId");

                    b.Navigation("Employee");

                    b.Navigation("Screening");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("CinemaSystem.Models.Screening", b =>
                {
                    b.HasOne("CinemaSystem.Models.Audithorium", "Audithorium")
                        .WithMany("Screenings")
                        .HasForeignKey("AudithoriumId")
                        .HasConstraintName("FK_Screening_ToTable_1");

                    b.HasOne("CinemaSystem.Models.Movie", "Movie")
                        .WithMany("Screenings")
                        .HasForeignKey("MovieId")
                        .HasConstraintName("FK_Screening_ToTable");

                    b.Navigation("Audithorium");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CinemaSystem.Models.Seat", b =>
                {
                    b.HasOne("CinemaSystem.Models.Audithorium", "Audithorium")
                        .WithMany("Seats")
                        .HasForeignKey("AudithoriumId")
                        .HasConstraintName("FK_Seat_ToTable");

                    b.Navigation("Audithorium");
                });

            modelBuilder.Entity("CinemaSystem.Models.Audithorium", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("CinemaSystem.Models.Employee", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CinemaSystem.Models.Movie", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("CinemaSystem.Models.MovieRating", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("CinemaSystem.Models.Post", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CinemaSystem.Models.Screening", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
